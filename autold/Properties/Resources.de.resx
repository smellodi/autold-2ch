<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
	<data name="Automatic" xml:space="preserve">
    <value>Automatisch</value>
  </data>
	<data name="BackToHome" xml:space="preserve">
    <value>Zurück zur Startseite</value>
  </data>
	<data name="CleanAir" xml:space="preserve">
    <value>Frischluft</value>
  </data>
	<data name="Clear" xml:space="preserve">
    <value>Löschen</value>
  </data>
	<data name="Close" xml:space="preserve">
    <value>Schliessen</value>
  </data>
	<data name="CommaSeparatedListWithExpressions" xml:space="preserve">
    <value>Eine Liste von Zahlen und Zahlenfolgen, getrennt mittels Kommas. Folgen sind in der Form 'MLMIN x [MS ≥ 10] x [ANZAHL &lt; 10]'. Beispiele: '4, 8x500, 16x500x2, 32x5'</value>
  </data>
	<data name="CommaSeparatedValues" xml:space="preserve">
    <value>Durch Komma getrennte, positive Gleitkommazahlen oder Zahlenfolgen in der Form MLMIN x [MS] x [ANZAHL]</value>
  </data>
	<data name="COMMonitor" xml:space="preserve">
    <value>COM Monitor</value>
  </data>
	<data name="Continue" xml:space="preserve">
    <value>Weiter</value>
  </data>
	<data name="CorrectAndTryAgain" xml:space="preserve">
    <value>Bitter korrigieren und erneut versuchen.</value>
  </data>
	<data name="Direction" xml:space="preserve">
    <value>Richtung</value>
  </data>
	<data name="DurationsSec" xml:space="preserve">
    <value>Dauer in Sekunden</value>
  </data>
	<data name="CannotOpenPort" xml:space="preserve">
    <value>Anschluss kann nicht geöffnet werden</value>
  </data>
	<data name="Events" xml:space="preserve">
    <value>Ereignisse</value>
  </data>
	<data name="Exit" xml:space="preserve">
    <value>Ausgang</value>
  </data>
	<data name="Familiarization" xml:space="preserve">
    <value>Einarbeitung</value>
  </data>
	<data name="FamiliarizeOdor" xml:space="preserve">
    <value>Mit dem Duft vertraut machen.</value>
  </data>
	<data name="FamilInstrContinue" xml:space="preserve">
    <value>Drücken Sie 'Test starten' um zu beginnen.</value>
  </data>
	<data name="FamilInstrOpenValve" xml:space="preserve">
    <value>Bitte warten sie nach dem Öffnen des Ventils einige Sekunden bis Sie den Duft wahrnehmen. Dann nehmen Sie sich Zeit sich den Duft einzuprägen.</value>
  </data>
	<data name="FamilInstrPreparing" xml:space="preserve">
    <value>Bereite den Duft vor</value>
  </data>
	<data name="FamilInstrSniff" xml:space="preserve">
    <value>Der Duft fliesst nun, bitte schnuppern Sie ihn!</value>
  </data>
	<data name="FamilInstrVentilating" xml:space="preserve">
    <value>Bitte warten Sie während der Schlauch mit Frischluft gereinigt wird ...</value>
  </data>
	<data name="FeedbackLoop" xml:space="preserve">
    <value>Rückmeldungsschleife</value>
  </data>
	<data name="FinalPause" xml:space="preserve">
    <value>Letzte Pause</value>
  </data>
	<data name="Finished" xml:space="preserve">
    <value>Beendet</value>
  </data>
	<data name="NumNotNeg" xml:space="preserve">
    <value>eine nicht-negative Zahl</value>
  </data>
	<data name="NumPos" xml:space="preserve">
    <value>eine positive Zahl</value>
  </data>
	<data name="NumPosSpaceSep" xml:space="preserve">
    <value>durch Leerzeichen getrennte positive Zahlen</value>
  </data>
	<data name="Graph" xml:space="preserve">
    <value>Graph</value>
  </data>
	<data name="Immediate" xml:space="preserve">
    <value>umgehend</value>
  </data>
	<data name="InfoF2" xml:space="preserve">
    <value>Drücken Sie F2 um COM Anschlüsse zu simulieren.</value>
  </data>
	<data name="InfoF5" xml:space="preserve">
    <value>Drücken Sie jederzeit F5 um das Protokollfenster anzuzeigen.</value>
  </data>
	<data name="InitialPause" xml:space="preserve">
    <value>Erste Pause</value>
  </data>
	<data name="Input" xml:space="preserve">
    <value>Eingabe</value>
  </data>
	<data name="Instructions" xml:space="preserve">
    <value>Anweisungen</value>
  </data>
	<data name="Interrupt" xml:space="preserve">
    <value>unterbrechen</value>
  </data>
	<data name="IntNotNeg" xml:space="preserve">
    <value>eine nicht-negative ganze Zahl</value>
  </data>
	<data name="IntPos" xml:space="preserve">
    <value>eine positive ganze Zahl</value>
  </data>
	<data name="Language" xml:space="preserve">
    <value>Sprache</value>
  </data>
	<data name="Light" xml:space="preserve">
    <value>Licht</value>
  </data>
	<data name="LMin" xml:space="preserve">
    <value>l/min</value>
  </data>
	<data name="MA" xml:space="preserve">
    <value>mA</value>
  </data>
	<data name="Manual" xml:space="preserve">
    <value>Handbuch</value>
  </data>
	<data name="MFCPlayground" xml:space="preserve">
    <value>MFC Spielplatz</value>
  </data>
	<data name="MlMin" xml:space="preserve">
    <value>ml/min</value>
  </data>
	<data name="Ms" xml:space="preserve">
    <value>ms</value>
  </data>
	<data name="MV" xml:space="preserve">
    <value>mV</value>
  </data>
	<data name="OdorantHere" xml:space="preserve">
    <value>Duft war hier</value>
  </data>
	<data name="OdorFlow" xml:space="preserve">
    <value>Duftstrom</value>
  </data>
	<data name="OdorLevel" xml:space="preserve">
    <value>Duftkonzentration</value>
  </data>
	<data name="OdorLevels" xml:space="preserve">
    <value>Duftkonzentrationen</value>
  </data>
	<data name="OdorPreparation" xml:space="preserve">
    <value>Duftvorbereitung</value>
  </data>
	<data name="OdorPulses" xml:space="preserve">
    <value>Duftimpulse</value>
  </data>
	<data name="OdorSensitivity" xml:space="preserve">
    <value>Ihre Duftsensitivität (ml/min):</value>
  </data>
	<data name="OdorStartsAfterInhale" xml:space="preserve">
    <value>Der Duft beginnt zu fliessen sobald Sie einatmen.</value>
  </data>
	<data name="OdorStartsAfterKeyPress" xml:space="preserve">
    <value>Der Duft beginnt zu fliessen sobald der Nuter die Leertaste drückt</value>
  </data>
	<data name="OdorStartsImmediately" xml:space="preserve">
    <value>Der Duft beginnt zu fliessen sobald er vorbereitet wurde</value>
  </data>
	<data name="Open" xml:space="preserve">
    <value>Offen</value>
  </data>
	<data name="OpenValve" xml:space="preserve">
    <value>Öffnet das Ventil zum Duft</value>
  </data>
	<data name="Pen" xml:space="preserve">
    <value>Kiste</value>
  </data>
	<data name="PenPresentation" xml:space="preserve">
    <value>Duftpräsentation</value>
  </data>
	<data name="PenSniffing" xml:space="preserve">
    <value>Schnuppern</value>
  </data>
	<data name="PIDSampling" xml:space="preserve">
    <value>PID Probenentnahme</value>
  </data>
	<data name="PIDTemp" xml:space="preserve">
    <value>Strom des Temperaturdetektors</value>
  </data>
	<data name="PIDVoltage" xml:space="preserve">
    <value>PID Spannung</value>
  </data>
	<data name="Procedure" xml:space="preserve">
    <value>Prozedur</value>
  </data>
	<data name="PulseFlowRate" xml:space="preserve">
    <value>Pulsdurchfluss</value>
  </data>
	<data name="Pulses" xml:space="preserve">
    <value>Puls</value>
  </data>
	<data name="RecognInRow" xml:space="preserve">
    <value>Erkennungen in Folge</value>
  </data>
	<data name="Result" xml:space="preserve">
    <value>Resultat</value>
  </data>
	<data name="Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
	<data name="SaveData" xml:space="preserve">
    <value>Daten speichern</value>
  </data>
	<data name="ScentedAir" xml:space="preserve">
    <value>Luft mit Duft</value>
  </data>
	<data name="Seconds" xml:space="preserve">
    <value>Sekunden</value>
  </data>
	<data name="SerialPorts" xml:space="preserve">
    <value>Geräte</value>
  </data>
	<data name="Set" xml:space="preserve">
    <value>Einstellen</value>
  </data>
	<data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
	<data name="ShowAs" xml:space="preserve">
    <value>Zeigen als</value>
  </data>
	<data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
	<data name="StartTest" xml:space="preserve">
    <value>Den Test starten</value>
  </data>
	<data name="Step" xml:space="preserve">
    <value>Schritt</value>
  </data>
	<data name="System" xml:space="preserve">
    <value>System</value>
  </data>
	<data name="Table" xml:space="preserve">
    <value>Tabelle</value>
  </data>
	<data name="Temp" xml:space="preserve">
    <value>Temp (C)</value>
  </data>
	<data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
	<data name="ThankYou" xml:space="preserve">
    <value>Vielen dank!</value>
  </data>
	<data name="ThresholdTest" xml:space="preserve">
    <value>Test zur Bestimmung der Wahrnehmungsschwelle</value>
  </data>
	<data name="ThTestInstrDone" xml:space="preserve">
    <value>Vielen Dank, Ihre Auswahl wurde registriert.</value>
  </data>
	<data name="ThTestInstrInhale" xml:space="preserve">
    <value>Bitte atmen Sie ein</value>
  </data>
	<data name="ThTestInstrPressKey" xml:space="preserve">
    <value>Bitte drücken Sie die Leertaste when Sie anfangen einzuatmen</value>
  </data>
	<data name="ThTestInstrSelectPen" xml:space="preserve">
    <value> Bitte wählen Sie die Kiste mit Geruch.</value>
  </data>
	<data name="ThTestInstrSniff" xml:space="preserve">
    <value>Schnuppern Sie an der Kiste</value>
  </data>
	<data name="ThTestInstrWait" xml:space="preserve">
    <value>Bitte warten Sie bis der Duft bereit ist.</value>
  </data>
	<data name="Time" xml:space="preserve">
    <value>Zeit</value>
  </data>
	<data name="ToCollect" xml:space="preserve">
    <value>Sammeln</value>
  </data>
	<data name="ToCount" xml:space="preserve">
    <value>Zählen</value>
  </data>
	<data name="ToKeepTargetLevel" xml:space="preserve">
    <value>um das Ziellevel zu halten</value>
  </data>
	<data name="ToReachTargetLevel" xml:space="preserve">
    <value>um das Ziellevel zu erreichen</value>
  </data>
	<data name="Turnings" xml:space="preserve">
    <value>Abzweigungen</value>
  </data>
	<data name="Unknown" xml:space="preserve">
    <value>unbekannt</value>
  </data>
	<data name="User" xml:space="preserve">
    <value>Nutzer</value>
  </data>
	<data name="Valves" xml:space="preserve">
    <value>Ventile</value>
  </data>
	<data name="NoDataToSave" xml:space="preserve">
    <value>Keine Daten zum Speichern verfügbar</value>
  </data>
	<data name="Waste" xml:space="preserve">
    <value>Papierkorb</value>
  </data>
	<data name="AppTerminated" xml:space="preserve">
    <value>Die Anwendung wird beendet.</value>
  </data>
	<data name="ControlsValve2" xml:space="preserve">
    <value>Kontrolliert Ventil #2 während des Strömen des Duftes. Dieses Ventil führt zum Papierkorb während beider Pausen.</value>
  </data>
	<data name="DataSavedInto" xml:space="preserve">
    <value>Daten gespeichert in</value>
  </data>
	<data name="DeviceConnLost" xml:space="preserve">
    <value>Verbindung zu Gerät {0} wurde getrennt.</value>
  </data>
	<data name="EmptyList" xml:space="preserve">
    <value>Die Liste von Werten ist leer</value>
  </data>
	<data name="ExpressionNotValid" xml:space="preserve">
    <value>Die Eingabe '{0}' ist unzulässig, nur Eingaben in der Form '{1}' sind zulässig.</value>
  </data>
	<data name="FailedToSave" xml:space="preserve">
    <value>Speichern der Daten in .. fehlgeschlagen</value>
  </data>
	<data name="OdorFlowTooHigh" xml:space="preserve">
    <value>Der Durchfluss ist zu hoch um in {0} Sekunden bereit zu sein.</value>
  </data>
	<data name="PressCancelToDiscard" xml:space="preserve">
    <value>Drücken Sie 'Abbrechen' um die Daten zu verwerfen.</value>
  </data>
	<data name="PressNoToChangeNameFolder" xml:space="preserve">
    <value>Drücken Sie 'Nein' um den Name und/oder Ordner zu ändern.</value>
  </data>
	<data name="Retry" xml:space="preserve">
    <value>Erneut probieren?</value>
  </data>
	<data name="SaveDataInto" xml:space="preserve">
    <value>Möchten Sie ihre Daten speichern in</value>
  </data>
	<data name="ValueFormatNotValid" xml:space="preserve">
    <value>Der Typ von Wert '{0}' ist unzulässig, es muss eine '{1}' Zahl sein</value>
  </data>
	<data name="ValueTooLarge" xml:space="preserve">
    <value>Der Wert '{0}' ist zu gross, er darf nicht grösser wie '{1}' sein</value>
  </data>
	<data name="ValueTooSmall" xml:space="preserve">
    <value>Der Wert '{0}' ist zu klein, er darf nicht kleiner wie '{1}' sein</value>
  </data>
	<data name="Logger" xml:space="preserve">
    <value>Aufzeichnungsgerät</value>
  </data>
	<data name="OlfactoryTestTool" xml:space="preserve">
    <value>Olfaktorisches Testgerät</value>
  </data>
	<data name="Validator" xml:space="preserve">
    <value>Validierer</value>
  </data>
	<data name="ThTestInstrIntro" xml:space="preserve">
    <value>Ihr Geruchssinn wird getestet. Der Test dauert in etwa 30-40 Minuten.</value>
  </data>
	<data name="ThTestInstrFinal" xml:space="preserve">
    <value>Alle Substanzenin diesem Test sind ungifitig und harmlos in den verwendeten Konzentration.</value>
  </data>
	<data name="ThTestInstrRN" xml:space="preserve">
    <value>[BEMERKUNG AN FORSCHER] Weitere Anweisungen können hier hinzugefügt werden. Wir könnten sogar persönliche Daten auf dieser Seite sammeln um sie später in den log Dateien zusammen mit den Daten zu speichern.</value>
  </data>
	<data name="ThTestInstrThreePens" xml:space="preserve">
    <value>Ihnen werden wiederholt drei Kisten präsentiert. Nur einer dieser Drei enthält den Geruchsstoff. Ihre Aufgabe ist es die Kiste zu finden, welcher ihrer Meinung nach einen Duft emittiert. Falls Sie keinen Geruch wahrnehmen können und daher keine Entscheidung treffen können, dann raten Sie bitte.</value>
  </data>
	<data name="Temperature" xml:space="preserve">
    <value>Temperatur</value>
  </data>
	<data name="Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
	<data name="ThTestInstrTwoPens" xml:space="preserve">
    <value>Ihnen werden wiederholt zwei Kisten präsentiert. Nur einer dieser Zwei enthält den Geruchsstoff. Ihre Aufgabe ist es die Kiste zu finden, welcher ihrer Meinung nach einen Duft emittiert. Falls Sie keinen Geruch wahrnehmen können und daher keine Entscheidung treffen können, dann raten Sie bitte.</value>
  </data>
	<data name="No" xml:space="preserve">
    <value>Nein</value>
  </data>
	<data name="Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
	<data name="OnePen" xml:space="preserve">
		<value>eine Kiste</value>
	</data>
	<data name="ThreePens" xml:space="preserve">
		<value>drei Kisten</value>
	</data>
	<data name="TwoPens" xml:space="preserve">
		<value>zwei Kisten</value>
	</data>
	<data name="FlowStart" xml:space="preserve">
		<value>Beginn der Zirkulation</value>
	</data>
	<data name="ProcedureType" xml:space="preserve">
		<value>Prozedurtyp</value>
	</data>
	<data name="ProcTypeOnePen" xml:space="preserve">
		<value>Nutzer antworten, ob die präsentierte Kiste gerochen hat oder nicht</value>
	</data>
	<data name="ProcTypeThreePens" xml:space="preserve">
		<value>Den Nutzern werden drei Kisten präsentiert. Sie müssen sich für eine entscheiden, die ihrer Meinung nach riecht</value>
	</data>
	<data name="ProcTypeTwoPens" xml:space="preserve">
		<value>Den Nutzern werden zwei Kisten präsentiert. Sie müssen sich für eine entscheiden, die ihrer Meinung nach riecht</value>
	</data>
	<data name="ThTestInstrOnePen" xml:space="preserve">
		<value>Sie werden wiederholt aufgefordert die Luft, welche zu der Maske geleitet wird, zu schnuppern. Ihre Aufgabe ist es zu entscheiden, ob Sie einen Geruch wahrgenommen haben.</value>
	</data>
	<data name="ThTestInstrChooseOdor" xml:space="preserve">
		<value>Haben Sie den Geruch wahrgenommen?</value>
	</data>
	<data name="Decreasing" xml:space="preserve">
		<value>Abnehmend</value>
	</data>
	<data name="Increasing" xml:space="preserve">
		<value>Zunehemend</value>
	</data>
	<data name="OK" xml:space="preserve">
		<value>Ok</value>
	</data>
	<data name="Discard" xml:space="preserve">
		<value>Löschen</value>
	</data>
	<data name="SaveAs" xml:space="preserve">
		<value>Speichern als…</value>
	</data>
	<data name="Abort" xml:space="preserve">
		<value>Abbrechen</value>
	</data>
	<data name="Ignore" xml:space="preserve">
		<value>Ignorieren</value>
	</data>
	<data name="PressDiscard" xml:space="preserve">
		<value>Drücken Sie ‘Löschen’ um die Daten zu löschen.</value>
	</data>
	<data name="PressCancel" xml:space="preserve">
		<value>Drücken Sie ‘Abbrechen’ um ohne zu speichern fortzufahren.</value>
	</data>
	<data name="BreathingStage" xml:space="preserve">
		<value>Atemphase</value>
	</data>
	<data name="Exhale" xml:space="preserve">
		<value>Ausatmen</value>
	</data>
	<data name="Inhale" xml:space="preserve">
		<value>Einatmen</value>
	</data>
	<data name="StartOdorFlow" xml:space="preserve">
		<value>Geruchspräsentation starten</value>
	</data>
	<data name="OdorPulsesExpressionNote" xml:space="preserve">
		<value>Notes: 

1. Valve #2 (output to user) is controlled by MFC embedded timer only if an expression contains pulse duration, otherwise it is controlled by the software timer that closed the valve after [Odour flow] seconds.

2. Valve #1 (gas mixer) is always controlled by the software timer.

3. Pulse duration defined in an expression must not exceed the general duration defined as "Odour flow".

4. Minimum pulse duration is 10ms. Maximum repetition count is 9. 


Examples described:

4 - the pulse of 4 ml/min lasting [Odour flow] seconds; the software timer is used,

8x500 - the pulse of 8 ml/min lasting 500 ms; the MFC timer is used,

16x500x2 - two pulse of 16 ml/min, each lasting 500 ms; the MFC timer is used,

32x5 - five pulses of 32 ml/min, each lasting [Odour flow] seconds; the software timer is used,</value>
	</data>
	<data name="Practice" xml:space="preserve">
		<value>Demonstation</value>
	</data>
	<data name="SystemAndUser" xml:space="preserve">
		<value>System und Nutzer</value>
	</data>
	<data name="Timer" xml:space="preserve">
		<value>Timer</value>
	</data>
	<data name="UseValveControllerTimer" xml:space="preserve">
		<value>Verwenden Sie die Zeitschaltuhr des Ventilreglers, wann immer es möglich ist </value>
	</data>
	<data name="Back" xml:space="preserve">
		<value>Zurücksetzen</value>
	</data>
</root>